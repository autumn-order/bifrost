//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "eve_alliance")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub alliance_id: i64,
    pub faction_id: Option<i32>,
    pub creator_corporation_id: i32,
    pub executor_corporation_id: i32,
    pub creator_id: i32,
    pub date_founded: DateTime,
    pub name: String,
    pub ticker: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::eve_character::Entity",
        from = "Column::CreatorId",
        to = "super::eve_character::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    EveCharacter,
    #[sea_orm(
        belongs_to = "super::eve_corporation::Entity",
        from = "Column::CreatorCorporationId",
        to = "super::eve_corporation::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    EveCorporation2,
    #[sea_orm(
        belongs_to = "super::eve_corporation::Entity",
        from = "Column::ExecutorCorporationId",
        to = "super::eve_corporation::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    EveCorporation1,
    #[sea_orm(
        belongs_to = "super::eve_faction::Entity",
        from = "Column::FactionId",
        to = "super::eve_faction::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    EveFaction,
}

impl Related<super::eve_character::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::EveCharacter.def()
    }
}

impl Related<super::eve_faction::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::EveFaction.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
